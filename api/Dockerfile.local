# This Dockerfile is designed to run the API using files that live on the host machine.
# This is useful for local development, because as the files are changed the server
# can detect that and use the newer code without being restarted.

FROM python:3.8
ENV PYTHONUNBUFFERED 1

RUN groupadd user && useradd --create-home --home-dir /home/user -g user user
WORKDIR /home/user

# Need the AWS CLI because boto3 doesn't support `sync`.
RUN curl -s "https://awscli.amazonaws.com/awscli-exe-linux-`uname -m`.zip" -o "awscliv2.zip"
RUN unzip awscliv2.zip
RUN ./aws/install

RUN python3 -m pip install --upgrade pip

# Allows docker to cache installed dependencies between builds
COPY requirements requirements
RUN pip install -r requirements/local.txt

VOLUME /home/user/code

EXPOSE $PORT

ARG SYSTEM_VERSION
ARG PORT

ENV SYSTEM_VERSION $SYSTEM_VERSION

# Adds our application code to the image, which is needed even though
# we use the code dir for the readme template.
COPY . .

USER user

WORKDIR /home/user/code

# Run the server
CMD gunicorn --bind 0.0.0.0:$PORT --access-logfile - scpca_portal.wsgi:application
